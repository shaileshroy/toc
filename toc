#pact1
string = "this is a sentence .Here is another one."
tokens=string.split()
print(tokens)

#pact2
import re
pattern = '^a...s$'
test_string ='abyss'
result = re.match(pattern ,test_string)

if result:
    print("ssearch successfull.'")
else:
    print("ssearch unsuccessfull.'")
 
#pact3
import random
def generate_derivation(grammar, start_symbol, max_steps):
    sequence, symbol = [], start_symbol
    for _ in range(max_steps):
        if symbol not in grammar :
            break
        production = random.choice(grammar[symbol])
        sequence.append(production)
        symbol = production
    return sequence
example_grammar = {'s':['AB','BC'], 'A':['a'],'B': ['b'], 'c': ['c']}
start_symbol, max_steps = 'A',5
sequence = generate_derivation(example_grammar ,start_symbol, max_steps)
print('derivation sequencee:',sequence)
